user  nginx;
# 工作进程, 等同cpu核心数
# grep processor /proc/cpuinfo | wc -l
worker_processes  2;
worker_cpu_affinity 01 10;
# 毎个进程的最大文件打开数。如果不设的话上限就是系统的ulimit –n的数字，一般为65535。
worker_rlimit_nofile 65535;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    # 每个进程的并发连接数
    worker_connections 1024;
    # 惊群问题
    accept_mutex off;
    multi_accept off;
}


http {

    ##
    # Basic Settings
    ##

    # 使用sendfile()传输文件, 普通on, 下载IO重负荷off
    sendfile on;
    # 上面on, 此处on, 数据库累积一起传输, 提高效率
    tcp_nopush on;
    # 小数据包不等待直接传输, 默认on, 与上面相反, 但是nginx在都on时可平衡效果
    tcp_nodelay on;
    keepalive_timeout 60 50;
    send_timeout 10s;
    # 大消耗更多内存, 但是冲突率更低
    types_hash_max_size 2048;
    # 允许的客户端请求头缓冲区大小, 默认1k, getconf PAGESIZE获取
    client_header_buffer_size 4k;
    # 客户端上传最大body大小, 否则413(Request Entity Too Large)错误, 默认1m
    client_max_body_size 8m;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    ##
    # Logging Settings
    ##

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    error_log  /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    # 开启gzip
    gzip  on;
    # 禁用IE 6 gzip
    gzip_disable "MSIE [1-6]\.";
    # 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
    gzip_min_length 1k;
    # 是否在http header中添加Vary: Accept-Encoding，建议开启
    # 告诉接收方发送的数据经过压缩, 兼容本身不支持Gzip的浏览器
    gzip_vary on;
    # gzip 压缩级别，1-10，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
    gzip_comp_level 2;
    # 压缩使用的存储大小
    #           number size
    # number: Nginx向系统申请的个数
    # size, 每个大小, getconf PAGESIZE获取
    gzip_buffers 32 4k;
    # 客户端不支持Gzip处理时, 返回解压的数据
    gunzip_static on;
    # 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;

    ##
    # Virtual Host Configs
    ##

    upstream api {
        server  10.1.1.198:5000 max_fails=1 fail_timeout=15s weight=1;
        server  10.1.1.198:9000 max_fails=1 fail_timeout=15s weight=1;
        #server localhost:8888 max_fails=1 fail_timeout=15s weight=1;
        #server localhost:8889 max_fails=1 fail_timeout=15s weight=1;
        #server localhost:8889 down;
    }

    server {
        listen 9000;

        location / {
            proxy_pass         http://api;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 8080;

        server_name localhost;

        root /var/www/html;

        # ~大小写, *不区分
        location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ {
            access_log   off;
            expires      30d;
        }

        location ~* ^.+\.(css|js|txt|xml|swf|wav)$ {
            access_log   off;
            expires      24h;
        }

        location ~* ^.+\.(html|htm)$ {
            expires      1h;
        }

        location / {
            autoindex on;
            autoindex_exact_size on;
            autoindex_localtime on;
            proxy_set_header Referer $host;
        }
    }
}
